<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>学习笔记</title>
  
  <subtitle>郑诗增的学习笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-13T05:45:21.722Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>郑诗增</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>14模板引擎ejs</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_14%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8Eejs/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_14模板引擎ejs/</id>
    <published>2019-06-07T22:26:14.000Z</published>
    <updated>2019-06-13T05:45:21.722Z</updated>
    
    <content type="html"><![CDATA[<h3 id="十四、模板引擎ejs"><a href="#十四、模板引擎ejs" class="headerlink" title="十四、模板引擎ejs"></a>十四、模板引擎ejs</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> ejs</span><br></pre></td></tr></table></figure><h6 id="1-变量-lt-name-gt"><a href="#1-变量-lt-name-gt" class="headerlink" title="1.变量 &lt;%= name %&gt;"></a>1.变量 &lt;%= name %&gt;</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%=json.arr[0].user%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="2-for-循环"><a href="#2-for-循环" class="headerlink" title="2.for 循环"></a>2.for 循环</h6><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span>(<span class="attr">var</span> <span class="attr">i</span>=<span class="string">0;i</span>&lt;<span class="attr">json.arr.length</span>;<span class="attr">i</span>++)&#123; %&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>用户名：<span class="tag">&lt;<span class="name">%=json.arr[i].user%</span>&gt;</span> 密码：<span class="tag">&lt;<span class="name">%=json.arr[i].pass%</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h6 id="3-表示原样输出不转义-号转义"><a href="#3-表示原样输出不转义-号转义" class="headerlink" title="3. - 表示原样输出不转义 =号转义"></a>3. - 表示原样输出不转义 =号转义</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">    <span class="attr">var</span> <span class="attr">str</span>=<span class="string">"&lt;div&gt;&lt;/div&gt;"</span>;</span></span><br><span class="line"><span class="tag">    %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">str</span> %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%=</span> <span class="attr">str</span> %&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="4-include"><a href="#4-include" class="headerlink" title="4. include"></a>4. include</h6><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby"> <span class="keyword">if</span>(type==<span class="string">'admin'</span>)&#123; </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby"> <span class="keyword">include</span> ../style/admin.css </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">&#125;<span class="keyword">else</span>&#123;</span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby"> <span class="keyword">include</span> ../style/user.css </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby"> &#125; </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;十四、模板引擎ejs&quot;&gt;&lt;a href=&quot;#十四、模板引擎ejs&quot; class=&quot;headerlink&quot; title=&quot;十四、模板引擎ejs&quot;&gt;&lt;/a&gt;十四、模板引擎ejs&lt;/h3&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>13jade一些语法</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_13jade%E4%B8%80%E4%BA%9B%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_13jade一些语法/</id>
    <published>2019-06-07T22:26:13.000Z</published>
    <updated>2019-06-13T05:45:24.714Z</updated>
    
    <content type="html"><![CDATA[<h3 id="十三、jade一些语法"><a href="#十三、jade一些语法" class="headerlink" title="十三、jade一些语法"></a>十三、jade一些语法</h3><h6 id="1-原样输出-加"><a href="#1-原样输出-加" class="headerlink" title="1. 原样输出 加 |"></a>1. 原样输出 加 |</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    script</span><br><span class="line">      |<span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">      | <span class="keyword">var</span> oBtn=<span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>);</span><br><span class="line">      | oBtn.onclick=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">      |   alert(<span class="string">'aaaa'</span>);</span><br><span class="line">      | &#125;;</span><br><span class="line">      |&#125;;</span><br><span class="line">  body</span><br><span class="line">    |abc</span><br><span class="line">    |ddd</span><br><span class="line">    |<span class="number">213</span></span><br></pre></td></tr></table></figure><h6 id="2-原样输出-加"><a href="#2-原样输出-加" class="headerlink" title="2. 原样输出 加 ."></a>2. 原样输出 加 .</h6><p>表示下面的所有层级都原样输出  eg head.<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line">  head.</span><br><span class="line">    div</span><br><span class="line">  body</span><br><span class="line">    <span class="string">|abc</span></span><br><span class="line">    <span class="string">|ddd</span></span><br><span class="line">    <span class="string">|213</span></span><br></pre></td></tr></table></figure></p><h6 id="3-include-加载外部文件"><a href="#3-include-加载外部文件" class="headerlink" title="3.include 加载外部文件"></a>3.include 加载外部文件</h6><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    script</span><br><span class="line">      include a.js</span><br><span class="line">  body</span><br><span class="line">    |abc</span><br><span class="line">    |ddd</span><br><span class="line">    |213</span><br></pre></td></tr></table></figure><h6 id="4-name-传参"><a href="#4-name-传参" class="headerlink" title="4.#{name} 传参"></a>4.#{name} 传参</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line">  head</span><br><span class="line">  body</span><br><span class="line">    <span class="selector-tag">div</span> 我的名字：#&#123;a+b&#125;</span><br></pre></td></tr></table></figure><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const jade=require(<span class="string">'jade'</span>);</span><br><span class="line"></span><br><span class="line">console.log(jade.renderFile(<span class="string">'./views/7.jade'</span>, &#123;<span class="string">pretty:</span> <span class="literal">true</span>, <span class="string">a:</span> <span class="number">12</span>, <span class="string">b:</span> <span class="number">5</span>&#125;));</span><br></pre></td></tr></table></figure><h6 id="5-直接传-style-json格式-class-数组格式"><a href="#5-直接传-style-json格式-class-数组格式" class="headerlink" title="5.直接传 style json格式 class 数组格式"></a>5.直接传 style json格式 class 数组格式</h6><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line">  head</span><br><span class="line">  body</span><br><span class="line">    div(<span class="attribute">style</span>=json)</span><br><span class="line">    div(<span class="attribute">class</span>=arr)</span><br><span class="line">    div(<span class="attribute">class</span>=arr <span class="attribute">class</span>=<span class="string">"active"</span>)</span><br><span class="line">    div(<span class="attribute">class</span>=arr)</span><br></pre></td></tr></table></figure><h6 id="6-前面加-表示代码块"><a href="#6-前面加-表示代码块" class="headerlink" title="6. 前面加 - 表示代码块"></a>6. 前面加 - 表示代码块</h6><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line">  head</span><br><span class="line">  <span class="keyword">body</span></span><br><span class="line"><span class="keyword"> </span>   -var a=<span class="number">12</span><span class="comment">;</span></span><br><span class="line">    -var <span class="keyword">b=5;</span></span><br><span class="line"><span class="keyword"> </span>   <span class="keyword">div </span>结果是：<span class="comment">#&#123;a+b&#125;</span></span><br></pre></td></tr></table></figure><h6 id="7-for循环"><a href="#7-for循环" class="headerlink" title="7. for循环"></a>7. for循环</h6><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line">  head</span><br><span class="line">  body</span><br><span class="line">    -<span class="keyword">for</span>(var <span class="built_in">i</span>=<span class="number">0</span>;<span class="built_in">i</span>&lt;arr.<span class="built_in">length</span>;<span class="built_in">i</span>++)</span><br><span class="line">      div=arr[<span class="built_in">i</span>]</span><br></pre></td></tr></table></figure><h6 id="8-标签不转义-加-号"><a href="#8-标签不转义-加-号" class="headerlink" title="8. 标签不转义 加! 号"></a>8. 标签不转义 加! 号</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">body</span><br><span class="line">  div!=<span class="attribute">content</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jade=<span class="built_in">require</span>(<span class="string">'jade'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(jade.renderFile(<span class="string">'./views/12.jade'</span>, &#123;<span class="attr">pretty</span>: <span class="literal">true</span>,</span><br><span class="line">  content: <span class="string">"&lt;h2&gt;你好啊&lt;/h2&gt;&lt;p&gt;我是中国人&lt;/p&gt;"</span></span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><h6 id="9-if-和-else"><a href="#9-if-和-else" class="headerlink" title="9. if 和 else"></a>9. if 和 else</h6><figure class="highlight cal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">body</span><br><span class="line">  -<span class="keyword">var</span> a=<span class="number">19</span>;</span><br><span class="line">  <span class="keyword">if</span>(a%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">div</span>(style=&#123;background:<span class="string">'red'</span>&#125;) 偶数</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">div</span>(style=&#123;background:<span class="string">'green'</span>&#125;) 奇数</span><br></pre></td></tr></table></figure><h6 id="10-case-when-相当于-switch-case"><a href="#10-case-when-相当于-switch-case" class="headerlink" title="10. case when  相当于 switch case"></a>10. case when  相当于 switch case</h6><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line">  head</span><br><span class="line">  body</span><br><span class="line">    -var <span class="attribute">a</span>=1;</span><br><span class="line">    case a</span><br><span class="line">      when 0</span><br><span class="line">        div aaa</span><br><span class="line">      when 1</span><br><span class="line">        div bbb</span><br><span class="line">      default</span><br><span class="line">        |不靠谱</span><br></pre></td></tr></table></figure><h6 id="11-while-循环"><a href="#11-while-循环" class="headerlink" title="11. while 循环"></a>11. while 循环</h6><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">body</span><br><span class="line">  -var <span class="attribute">a</span>=0;</span><br><span class="line">  <span class="keyword">while</span> a&lt;12</span><br><span class="line">    <span class="keyword">if</span> a%<span class="attribute">4</span>==0 &amp;&amp; a!=0</span><br><span class="line">      div.<span class="attribute">last</span>=a++</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="attribute">div</span>=a++</span><br></pre></td></tr></table></figure><h4 id="小示例"><a href="#小示例" class="headerlink" title="小示例"></a>小示例</h4><p>//index.jade<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">doctype</span><br><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    meta(charset=<span class="string">"utf-8"</span>)</span><br><span class="line">    <span class="built_in">title</span> jade测试页面</span><br><span class="line">    <span class="built_in">style</span>.</span><br><span class="line">      div &#123;<span class="built_in">width</span>:100px;<span class="built_in">height</span>:100px;<span class="built_in">background</span>:#CCC;text-align:<span class="built_in">center</span>;line-<span class="built_in">height</span>:100px;<span class="built_in">float</span>:left;margin:10px auto&#125;</span><br><span class="line">      div.<span class="built_in">last</span> &#123;clear:left&#125;</span><br><span class="line">  body</span><br><span class="line">    -<span class="built_in">var</span> a=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> a&lt;<span class="number">12</span></span><br><span class="line">      <span class="keyword">if</span> a%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; a!=<span class="number">0</span></span><br><span class="line">        div.<span class="built_in">last</span>=a++</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        div=a++</span><br></pre></td></tr></table></figure></p><p>//index.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jade=<span class="built_in">require</span>(<span class="string">'jade'</span>);</span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str=jade.renderFile(<span class="string">'./views/index.jade'</span>, &#123;<span class="attr">pretty</span>: <span class="literal">true</span>&#125;);</span><br><span class="line"></span><br><span class="line">fs.writeFile(<span class="string">'./build/index.html'</span>, str, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(err)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'编译失败'</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'成功'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;十三、jade一些语法&quot;&gt;&lt;a href=&quot;#十三、jade一些语法&quot; class=&quot;headerlink&quot; title=&quot;十三、jade一些语法&quot;&gt;&lt;/a&gt;十三、jade一些语法&lt;/h3&gt;&lt;h6 id=&quot;1-原样输出-加&quot;&gt;&lt;a href=&quot;#1-原样输出-加&quot;
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>12模板引擎jade</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_12%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8Ejade/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_12模板引擎jade/</id>
    <published>2019-06-07T22:26:12.000Z</published>
    <updated>2019-06-13T05:45:27.998Z</updated>
    
    <content type="html"><![CDATA[<h3 id="十二、模板引擎jade"><a href="#十二、模板引擎jade" class="headerlink" title="十二、模板引擎jade"></a>十二、模板引擎jade</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install </span><span class="keyword">jade</span></span><br><span class="line"><span class="keyword">npm </span><span class="keyword">install </span>ejs</span><br></pre></td></tr></table></figure><h6 id="jade-破坏式、侵入式、强依赖"><a href="#jade-破坏式、侵入式、强依赖" class="headerlink" title="jade-破坏式、侵入式、强依赖"></a>jade-破坏式、侵入式、强依赖</h6><ol><li>根据缩进，规定层级</li><li>属性放在()里面，逗号分隔</li><li>内容空个格，直接往后堆<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">html<span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">head<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">style<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">body<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">div<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">div<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>属性</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">script</span><span class="params">(src=<span class="string">"a.js"</span>)</span></span> <span class="comment">//jade写法</span></span><br><span class="line">&lt;script src=<span class="string">"a.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><strong>内容</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">a</span><span class="params">(href=<span class="string">"http://www.zhinengshe.com/"</span>)</span></span> 官网</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"http://www.zhinengshe.com/"</span>&gt;官网&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><h5 id="style-”width-200px-height-200px-background-red-”"><a href="#style-”width-200px-height-200px-background-red-”" class="headerlink" title="style=”width:200px;height:200px;background:red;”"></a>style=”width:200px;height:200px;background:red;”</h5><ol><li><p>普通属性写法</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">div</span><span class="params">(style=<span class="string">"width:200px;height:200px;background:red"</span>)</span></span></span><br></pre></td></tr></table></figure></li><li><p>用json</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div(style= &#123;<span class="built_in">width</span>: <span class="string">'200px'</span>, <span class="built_in">height</span>: <span class="string">'200px'</span>, <span class="built_in">background</span>: <span class="string">'red'</span>&#125;)</span><br></pre></td></tr></table></figure></li></ol><h5 id="class-”aaa-left-swrap-active”"><a href="#class-”aaa-left-swrap-active”" class="headerlink" title="class=”aaa left-swrap active”"></a>class=”aaa left-swrap active”</h5><ol><li><p>普通属性写法</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">div</span><span class="params">(class=<span class="string">"aaa left-warp active"</span>)</span></span></span><br></pre></td></tr></table></figure></li><li><p>用arr</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">div</span><span class="params">(class= [<span class="string">'aaa'</span>, <span class="string">'left-warp'</span>, <span class="string">'active'</span>])</span></span></span><br></pre></td></tr></table></figure></li></ol><h6 id="a-jade-render-‘字符串’"><a href="#a-jade-render-‘字符串’" class="headerlink" title="a. jade.render(‘字符串’);"></a>a. jade.render(‘字符串’);</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jade=<span class="built_in">require</span>(<span class="string">'jade'</span>);</span><br><span class="line"><span class="keyword">var</span> str=jade.render(<span class="string">'html'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br></pre></td></tr></table></figure><h6 id="b-jade-renderFile-‘模板文件名’-参数"><a href="#b-jade-renderFile-‘模板文件名’-参数" class="headerlink" title="b. jade.renderFile(‘模板文件名’, 参数)"></a>b. jade.renderFile(‘模板文件名’, 参数)</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jade=<span class="built_in">require</span>(<span class="string">'jade'</span>);</span><br><span class="line"><span class="keyword">var</span> str=jade.renderFile(<span class="string">'./views/8.jade'</span>, &#123;<span class="attr">pretty</span>: <span class="literal">true</span>&#125;);</span><br><span class="line"><span class="comment">//var str=jade.renderFile('./views/8.jade');//pretty 排版美化</span></span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br></pre></td></tr></table></figure><hr><h6 id="ejs-温和、非侵入式、弱依赖"><a href="#ejs-温和、非侵入式、弱依赖" class="headerlink" title="ejs-温和、非侵入式、弱依赖"></a>ejs-温和、非侵入式、弱依赖</h6><p>&lt;%= name %&gt;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ejs=<span class="built_in">require</span>(<span class="string">'ejs'</span>);</span><br><span class="line"></span><br><span class="line">ejs.renderFile(<span class="string">'./views/1.ejs'</span>, &#123;<span class="attr">name</span>: <span class="string">'blue'</span>&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(err)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'编译失败'</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//1.ejs</span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    我的名字叫：<span class="tag">&lt;<span class="name">%=</span> <span class="attr">name</span> %&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;十二、模板引擎jade&quot;&gt;&lt;a href=&quot;#十二、模板引擎jade&quot; class=&quot;headerlink&quot; title=&quot;十二、模板引擎jade&quot;&gt;&lt;/a&gt;十二、模板引擎jade&lt;/h3&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;ta
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>11cookie和session</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_11cookie%E5%92%8Csession/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_11cookie和session/</id>
    <published>2019-06-07T22:26:11.000Z</published>
    <updated>2019-06-13T05:45:31.164Z</updated>
    
    <content type="html"><![CDATA[<h3 id="十一、cookie和session"><a href="#十一、cookie和session" class="headerlink" title="十一、cookie和session"></a>十一、cookie和session</h3><p>http-无状态的,要保存用户数据所以就有了cookie和session</p><ol><li><p>cookie：在浏览器保存一些数据，每次请求都会带过来<br>*不安全、有限(4K)</p></li><li><p>session：保存数据，保存在服务端<br>*安全、无限</p></li></ol><hr><p>session：基于cookie实现的<br>  *cookie中会有一个session的ID，服务器利用sessionid找到session文件、读取、写入</p><p>  隐患：session劫持   </p><hr><h4 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h4><blockquote><ol><li>cookie空间非常小—省着用,精打细算</li><li>安全性非常差,校验cookie是否被篡改过</li></ol></blockquote><h5 id="a-发送cookie"><a href="#a-发送cookie" class="headerlink" title="a.发送cookie"></a>a.发送cookie</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">res.secret=<span class="string">'字符串'</span>;<span class="comment">//加签名   这个可不写 server.use(cookieParser('签名字符串'));时已经加了</span></span><br><span class="line">res.cookie(名字, 值, &#123;<span class="string">path:</span> <span class="string">'/'</span>, <span class="string">maxAge:</span> 毫秒, <span class="string">signed:</span> <span class="literal">true</span>&#125;);</span><br><span class="line"><span class="comment">//signed 是否加签名</span></span><br><span class="line"><span class="comment">//maxAge 有效期以毫秒为单位</span></span><br><span class="line"><span class="comment">//eg </span></span><br><span class="line">res.cookie(<span class="string">'user'</span>, <span class="string">'blue'</span>, &#123;<span class="string">path:</span> <span class="string">'/aaa'</span>, <span class="string">maxAge:</span> <span class="number">30</span>*<span class="number">24</span>*<span class="number">3600</span>*<span class="number">1000</span>&#125;);</span><br></pre></td></tr></table></figure><h5 id="b-读取cookie"><a href="#b-读取cookie" class="headerlink" title="b.读取cookie"></a>b.读取cookie</h5><p>cookie-parser<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cookieParser=<span class="keyword">require</span>(<span class="string">'cookie-parser'</span>);<span class="comment">//加载</span></span><br><span class="line">server.<span class="keyword">use</span>(cookieParser());<span class="comment">//使用</span></span><br><span class="line"></span><br><span class="line">server.<span class="keyword">use</span>(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(req, res)</span></span>&#123;</span><br><span class="line">  console.log(req.cookies);<span class="comment">//cookies</span></span><br><span class="line">  res.send(<span class="string">'ok'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server.use(cookieParser(<span class="string">'签名字符串'</span>));</span><br><span class="line"><span class="comment">//发送时 signed: true有签名</span></span><br><span class="line">server.use(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'签名cookie：'</span>, req.signedCookies)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'无签名cookie：'</span>, req.cookies);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="c-删除cookie"><a href="#c-删除cookie" class="headerlink" title="c.删除cookie"></a>c.删除cookie</h5><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.clearCookie(名字)<span class="comment">;</span></span><br></pre></td></tr></table></figure><hr><h4 id="session"><a href="#session" class="headerlink" title="session"></a>session</h4><p>cookie-session<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cookieSession=<span class="keyword">require</span>(<span class="string">'cookie-session'</span>);<span class="comment">//加载</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    server.use(cookieSession(&#123;</span></span><br><span class="line"><span class="comment">keys: [.., .., .., ..]</span></span><br><span class="line"><span class="comment">&#125;));</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">server.<span class="keyword">use</span>(cookieParser());</span><br><span class="line">server.<span class="keyword">use</span>(cookieSession(&#123;</span><br><span class="line">  name: <span class="string">'sess'</span>,</span><br><span class="line">  keys: [<span class="string">'aaa'</span>, <span class="string">'bbb'</span>, <span class="string">'ccc'</span>],</span><br><span class="line">  maxAge: <span class="number">2</span>*<span class="number">3600</span>*<span class="number">1000</span></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">server.<span class="keyword">use</span>(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(req, res)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(req.session[<span class="string">'count'</span>]==<span class="keyword">null</span>)&#123;</span><br><span class="line">    req.session[<span class="string">'count'</span>]=<span class="number">1</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    req.session[<span class="string">'count'</span>]++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  console.log(req.session[<span class="string">'count'</span>]);</span><br><span class="line"></span><br><span class="line">  res.send(<span class="string">'ok'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h5 id="删除session"><a href="#删除session" class="headerlink" title="删除session"></a>删除session</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">delete</span> <span class="selector-tag">req</span><span class="selector-class">.session</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">res</span><span class="selector-class">.session</span><span class="selector-attr">['xxx']</span></span><br><span class="line"><span class="selector-tag">delete</span> <span class="selector-tag">res</span><span class="selector-class">.session</span><span class="selector-attr">['xxx']</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;十一、cookie和session&quot;&gt;&lt;a href=&quot;#十一、cookie和session&quot; class=&quot;headerlink&quot; title=&quot;十一、cookie和session&quot;&gt;&lt;/a&gt;十一、cookie和session&lt;/h3&gt;&lt;p&gt;http-无状态的,
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>10express了解、中间件、链式操作</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_10express%E4%BA%86%E8%A7%A3%E3%80%81%E4%B8%AD%E9%97%B4%E4%BB%B6%E3%80%81%E9%93%BE%E5%BC%8F%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_10express了解、中间件、链式操作/</id>
    <published>2019-06-07T22:26:10.000Z</published>
    <updated>2019-06-13T05:45:02.487Z</updated>
    
    <content type="html"><![CDATA[<h3 id="十、express-了解"><a href="#十、express-了解" class="headerlink" title="十、express 了解"></a>十、express 了解</h3><h4 id="Express："><a href="#Express：" class="headerlink" title="Express："></a>Express：</h4><h5 id="1-数据：GET、POST"><a href="#1-数据：GET、POST" class="headerlink" title="1. 数据：GET、POST"></a>1. 数据：GET、POST</h5><h6 id="GET-无需中间件"><a href="#GET-无需中间件" class="headerlink" title="GET-无需中间件"></a>GET-无需中间件</h6><p>req.query<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server.use(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.query); <span class="comment">//GET</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h6 id="POST-需要”body-parser”"><a href="#POST-需要”body-parser”" class="headerlink" title="POST-需要”body-parser”"></a>POST-需要”body-parser”</h6><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express=<span class="keyword">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser=<span class="keyword">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server=express();</span><br><span class="line">server.listen(<span class="number">8080</span>);</span><br><span class="line"><span class="comment">//中间件body-parser 加工post数据然后放到 req.body里</span></span><br><span class="line"><span class="comment">//server.use(bodyParser.urlencoded(&#123;&#125;));//不带参数</span></span><br><span class="line">server.<span class="keyword">use</span>(bodyParser.urlencoded(&#123;</span><br><span class="line">  extended: <span class="keyword">false</span>,                 <span class="comment">//扩展模式</span></span><br><span class="line">  limit:    <span class="number">2</span>*<span class="number">1024</span>*<span class="number">1024</span>           <span class="comment">//限制-2M</span></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">server.<span class="keyword">use</span>(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(req, res)</span></span>&#123;</span><br><span class="line">  console.log(req.body); <span class="comment">//POST</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="2-中间件：使用、写、链式操作"><a href="#2-中间件：使用、写、链式操作" class="headerlink" title="2. 中间件：使用、写、链式操作"></a>2. 中间件：使用、写、链式操作</h5><h6 id="链式操作："><a href="#链式操作：" class="headerlink" title="链式操作："></a>链式操作：</h6><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server.use(<span class="function"><span class="keyword">function</span> <span class="params">(req, res, next)</span></span>&#123;&#125;);</span><br><span class="line">server.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(req, res, next)</span></span>&#123;&#125;);</span><br><span class="line">server.post(<span class="function"><span class="keyword">function</span> <span class="params">(req, res, next)</span></span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line">// <span class="built_in">next</span>——下一个步骤</span><br><span class="line"><span class="built_in">next</span>();</span><br><span class="line"></span><br><span class="line">server.use(<span class="string">'/login'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</span><br><span class="line">  mysql.query(<span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(有错)</span><br><span class="line">      res.emit(<span class="string">'error'</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">next</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h6 id="中间件-body-parser-、自己写中间件"><a href="#中间件-body-parser-、自己写中间件" class="headerlink" title="中间件(body-parser)、自己写中间件"></a>中间件(body-parser)、自己写中间件</h6><p>body-parser<br><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  server.<span class="keyword">use</span>(bodyParser.urlencoded(&#123;&#125;));<span class="comment">//不带参数</span></span><br><span class="line">  server.<span class="keyword">use</span>('/', <span class="function"><span class="keyword">function</span> <span class="params">(req, res)</span>&#123;</span></span><br><span class="line">    console.<span class="built_in">log</span>(req.body); <span class="comment">//POST</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>自己写的中间件my-body-parser.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> querystring=<span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports=<span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> str=<span class="string">''</span>;</span><br><span class="line">      req.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>)</span>&#123;</span><br><span class="line">        str+=data;</span><br><span class="line">      &#125;);</span><br><span class="line">      req.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        req.body=querystring.parse(str);</span><br><span class="line"></span><br><span class="line">        next();</span><br><span class="line">      &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>使用<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bodyParser2=<span class="keyword">require</span>(<span class="string">'./libs/my-body-parser'</span>);</span><br><span class="line">server.<span class="keyword">use</span>(bodyParser2);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;十、express-了解&quot;&gt;&lt;a href=&quot;#十、express-了解&quot; class=&quot;headerlink&quot; title=&quot;十、express 了解&quot;&gt;&lt;/a&gt;十、express 了解&lt;/h3&gt;&lt;h4 id=&quot;Express：&quot;&gt;&lt;a href=&quot;#Expre
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>09express框架</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_09express%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_09express框架/</id>
    <published>2019-06-07T22:26:09.000Z</published>
    <updated>2019-06-13T05:44:51.031Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> express</span><br></pre></td></tr></table></figure><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h3><h3 id="3-接收请求"><a href="#3-接收请求" class="headerlink" title="3.接收请求"></a>3.接收请求</h3><h3 id="4-响应"><a href="#4-响应" class="headerlink" title="4.响应"></a>4.响应</h3><hr><p>express保留了原生的功能，添加了一些方法(send)，增强原有的功能</p><h6 id="三个步骤"><a href="#三个步骤" class="headerlink" title="三个步骤"></a>三个步骤</h6><ol><li><p>创建服务   </p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">var server</span>=express();</span><br></pre></td></tr></table></figure></li><li><p>监听  </p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.<span class="section">listen</span>(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure></li><li><p>处理请求</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server.<span class="keyword">use</span>(<span class="string">'地址'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(req, res)</span></span>&#123;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><hr><h6 id="三种方法："><a href="#三种方法：" class="headerlink" title="三种方法："></a>三种方法：</h6><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.get(<span class="string">'/'</span>, <span class="keyword">function</span> <span class="title"></span>(req, res)&#123;&#125;);</span><br><span class="line">.post(<span class="string">'/'</span>, <span class="keyword">function</span> <span class="title"></span>(req, res)&#123;&#125;);</span><br><span class="line">.<span class="keyword">use</span>(<span class="string">'/'</span>, <span class="keyword">function</span> <span class="title"></span>(req, res)&#123;&#125;);</span><br></pre></td></tr></table></figure><p>use 通吃，get和post都响应   </p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">const express=<span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line">var server=express();</span><br><span class="line">/*</span><br><span class="line">server.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</span><br><span class="line">  console.<span class="built_in">log</span>(<span class="string">'有GET'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">server.post(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</span><br><span class="line">  console.<span class="built_in">log</span>(<span class="string">'有POST'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">*/</span><br><span class="line">server.use(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</span><br><span class="line">  console.<span class="built_in">log</span>(<span class="string">'use了'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure><h5 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h5><p>express框架：</p><ol><li>依赖中间件</li><li>接收请求<br>get/post/use<br>get(‘/地址’, function (req, res){});</li><li>非破坏式的，原生的还可用，增加了一些方法。<br>req.url</li><li>static用法<br>const static=require(‘express-static’);<br>server.use(static(‘./www’));</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express=<span class="keyword">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> expressStatic=<span class="keyword">require</span>(<span class="string">'express-static'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server=express();</span><br><span class="line">server.listen(<span class="number">8080</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户数据</span></span><br><span class="line"><span class="keyword">var</span> users=&#123;</span><br><span class="line">  <span class="string">'blue'</span>: <span class="string">'123456'</span>,</span><br><span class="line">  <span class="string">'zhangsan'</span>: <span class="string">'654321'</span>,</span><br><span class="line">  <span class="string">'lisi'</span>: <span class="string">'987987'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">server.get(<span class="string">'/login'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(req, res)</span></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> user=req.query[<span class="string">'user'</span>];</span><br><span class="line">  <span class="keyword">var</span> pass=req.query[<span class="string">'pass'</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(users[user]==<span class="keyword">null</span>)&#123;</span><br><span class="line">    res.send(&#123;ok: <span class="keyword">false</span>, msg: <span class="string">'此用户不存在'</span>&#125;);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(users[user]!=pass)&#123;</span><br><span class="line">      res.send(&#123;ok: <span class="keyword">false</span>, msg: <span class="string">'密码错了'</span>&#125;);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      res.send(&#123;ok: <span class="keyword">true</span>, msg: <span class="string">'成功'</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.<span class="keyword">use</span>(expressStatic(<span class="string">'./www'</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1.安装&quot;&gt;&lt;/a&gt;1.安装&lt;/h3&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>08自定义模块</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_08%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E5%9D%97/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_08自定义模块/</id>
    <published>2019-06-07T22:26:08.000Z</published>
    <updated>2019-06-13T05:44:47.665Z</updated>
    
    <content type="html"><![CDATA[<h5 id="八-自定义模块"><a href="#八-自定义模块" class="headerlink" title="八.自定义模块"></a>八.自定义模块</h5><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A<span class="function"><span class="params">(模块化)</span>--&gt;</span>B(系统模块)</span><br><span class="line">A-<span class="function">-&gt;</span>C(自定义模块)</span><br></pre></td></tr></table></figure><hr><h3 id="1-模块组成"><a href="#1-模块组成" class="headerlink" title="1. 模块组成"></a>1. 模块组成</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">require     <span class="comment">//引入其他模块</span></span><br><span class="line"><span class="keyword">exports</span>     <span class="comment">//一个一个输出</span></span><br><span class="line"><span class="keyword">module</span>      <span class="comment">//批量输出</span></span><br></pre></td></tr></table></figure><h3 id="2-npm"><a href="#2-npm" class="headerlink" title="2. npm"></a>2. npm</h3><h5 id="npm：NodeJS-Package-Manager-NodeJS包管理器"><a href="#npm：NodeJS-Package-Manager-NodeJS包管理器" class="headerlink" title="npm：NodeJS Package Manager(NodeJS包管理器)"></a>npm：NodeJS Package Manager(NodeJS包管理器)</h5><ol><li>统一下载途径 node_modules</li><li>自动下载依赖</li></ol><h3 id="3-发布自己的模块"><a href="#3-发布自己的模块" class="headerlink" title="3. 发布自己的模块"></a>3. 发布自己的模块</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm init        <span class="string">//</span>初始化</span><br><span class="line">npm publish     <span class="string">//</span>发布包</span><br><span class="line">npm <span class="params">--force</span> unpublish <span class="string">//</span>卸载包</span><br></pre></td></tr></table></figure><h3 id="npm官网"><a href="#npm官网" class="headerlink" title="npm官网"></a><a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm官网</a></h3><ol><li><p>自己的模块</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span></span><br><span class="line"><span class="class"><span class="keyword">module</span></span></span><br><span class="line">exports</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><figcaption><span>引入模块加./   </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">    1.如果有&quot;./&quot;   </span><br><span class="line">    从当前目录找   </span><br><span class="line"></span><br><span class="line">    2.如果没有&quot;./&quot;   </span><br><span class="line">    先从系统模块   </span><br><span class="line">    再从node_modules找   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3. &quot;.js&quot;可选   </span><br><span class="line">eg:  ```const mod1=require(&apos;./mod&apos;);```</span><br></pre></td></tr></table></figure></li></ol><p>npm install xxx<br>npm uninstall xxx<br><code>`</code></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结   "></a><strong>小结</strong>   </h2><ol><li><p>模块里面<br>1.1 require——引入<br>1.2 exports——输出<br>1.3 module.exports——批量输出</p></li><li><p>npm<br>2.1 帮咱们下载模块<br>2.2 自动解决依赖   </p></li><li><p>node_modules    模块放这里</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;八-自定义模块&quot;&gt;&lt;a href=&quot;#八-自定义模块&quot; class=&quot;headerlink&quot; title=&quot;八.自定义模块&quot;&gt;&lt;/a&gt;八.自定义模块&lt;/h5&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>07nodejs系统模块</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_07nodejs%E7%B3%BB%E7%BB%9F%E6%A8%A1%E5%9D%97/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_07nodejs系统模块/</id>
    <published>2019-06-07T22:26:07.000Z</published>
    <updated>2019-06-13T05:44:44.059Z</updated>
    
    <content type="html"><![CDATA[<h3 id="nodejs官网docs-API"><a href="#nodejs官网docs-API" class="headerlink" title="nodejs官网docs API"></a><a href="https://nodejs.org/en/docs/" target="_blank" rel="noopener">nodejs官网docs API</a></h3><p>Stability 稳定性</p><h5 id="系统模块："><a href="#系统模块：" class="headerlink" title="系统模块："></a>系统模块：</h5><p>Crypto    加密<br>Events    事件<br>Net    网络操作<br>OS    操作系统信息<br>Path    处理文件路径<br>Stream    流操作<br>Timers    定时器<br>ZLIB    压缩   </p><p>require</p><hr><p><strong>time.js</strong><br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setInterval(<span class="name">function</span> ()&#123;</span><br><span class="line">  console.log(<span class="name">Math</span>.random())<span class="comment">;</span></span><br><span class="line">&#125;, <span class="number">100</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;nodejs官网docs-API&quot;&gt;&lt;a href=&quot;#nodejs官网docs-API&quot; class=&quot;headerlink&quot; title=&quot;nodejs官网docs API&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://nodejs.org/en/docs/&quot; 
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>06注册登录小示例</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_06%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95%E5%B0%8F%E7%A4%BA%E4%BE%8B/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_06注册登录小示例/</id>
    <published>2019-06-07T22:26:06.000Z</published>
    <updated>2019-06-13T05:44:38.025Z</updated>
    
    <content type="html"><![CDATA[<h5 id="六-注册登录小示例"><a href="#六-注册登录小示例" class="headerlink" title="六.注册登录小示例"></a>六.注册登录小示例</h5><p>1.接口：<br>注册： /user?act=reg&amp;user=aaa&amp;pass=123456<br>返回JSON {“ok”: false, “msg”: “原因”}   </p><p>登录: /user?act=login&amp;user=aaa&amp;pass=123456   </p><h2 id="返回JSON-“ok”-true-“msg”-“原因”"><a href="#返回JSON-“ok”-true-“msg”-“原因”" class="headerlink" title="返回JSON {“ok”: true, “msg”: “原因”}"></a>返回JSON {“ok”: true, “msg”: “原因”}</h2><h6 id="1-分两部分"><a href="#1-分两部分" class="headerlink" title="1.分两部分"></a>1.分两部分</h6><p><strong>1.1对文件访问：</strong><br><a href="http://localhost:8080/1.html" target="_blank" rel="noopener">http://localhost:8080/1.html</a><br><a href="http://localhost:8080/ajax.js" target="_blank" rel="noopener">http://localhost:8080/ajax.js</a><br><a href="http://localhost:8080/1.jpg" target="_blank" rel="noopener">http://localhost:8080/1.jpg</a>   </p><p><strong>1.2对接口访问：</strong><br><a href="http://localhost:8080/user?act=xx.." target="_blank" rel="noopener">http://localhost:8080/user?act=xx..</a>.<br><a href="http://localhost:8080/news?act=xxx.." target="_blank" rel="noopener">http://localhost:8080/news?act=xxx..</a>.   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> querystring=<span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"><span class="keyword">const</span> urlLib=<span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> users=&#123;&#125;;   <span class="comment">//&#123;"blue": "123456", "zhangsan": "123456", "lisi": "321321"&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server=http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//解析数据</span></span><br><span class="line">  <span class="keyword">var</span> str=<span class="string">''</span>;</span><br><span class="line">  req.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>)</span>&#123;</span><br><span class="line">    str+=data;</span><br><span class="line">  &#125;);</span><br><span class="line">  req.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> obj=urlLib.parse(req.url, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> url=obj.pathname;</span><br><span class="line">    <span class="keyword">const</span> GET=obj.query;</span><br><span class="line">    <span class="keyword">const</span> POST=querystring.parse(str);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//区分——接口、文件</span></span><br><span class="line">    <span class="keyword">if</span>(url==<span class="string">'/user'</span>)&#123;   <span class="comment">//接口</span></span><br><span class="line">      <span class="keyword">switch</span>(GET.act)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'reg'</span>:</span><br><span class="line">          <span class="comment">//1.检查用户名是否已经有了</span></span><br><span class="line">          <span class="keyword">if</span>(users[GET.user])&#123;</span><br><span class="line">            res.write(<span class="string">'&#123;"ok": false, "msg": "此用户已存在"&#125;'</span>);</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//2.插入users</span></span><br><span class="line">            users[GET.user]=GET.pass;</span><br><span class="line">            res.write(<span class="string">'&#123;"ok": true, "msg": "注册成功"&#125;'</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'login'</span>:</span><br><span class="line">          <span class="comment">//1.检查用户是否存在</span></span><br><span class="line">          <span class="keyword">if</span>(users[GET.user]==<span class="literal">null</span>)&#123;</span><br><span class="line">            res.write(<span class="string">'&#123;"ok": false, "msg": "此用户不存在"&#125;'</span>);</span><br><span class="line">          <span class="comment">//2.检查用户密码</span></span><br><span class="line">          &#125;<span class="keyword">else</span> <span class="keyword">if</span>(users[GET.user]!=GET.pass)&#123;</span><br><span class="line">            res.write(<span class="string">'&#123;"ok": false, "msg": "用户名或密码有误"&#125;'</span>);</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.write(<span class="string">'&#123;"ok": true, "msg": "登录成功"&#125;'</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">          res.write(<span class="string">'&#123;"ok": false, "msg": "未知的act"&#125;'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      res.end();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;              <span class="comment">//文件</span></span><br><span class="line">      <span class="comment">//读取文件</span></span><br><span class="line">      <span class="keyword">var</span> file_name=<span class="string">'./www'</span>+url;</span><br><span class="line">      fs.readFile(file_name, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">          res.write(<span class="string">'404'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          res.write(data);</span><br><span class="line">        &#125;</span><br><span class="line">        res.end();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;六-注册登录小示例&quot;&gt;&lt;a href=&quot;#六-注册登录小示例&quot; class=&quot;headerlink&quot; title=&quot;六.注册登录小示例&quot;&gt;&lt;/a&gt;六.注册登录小示例&lt;/h5&gt;&lt;p&gt;1.接口：&lt;br&gt;注册： /user?act=reg&amp;amp;user=aaa&amp;am
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>05数据请求---post</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_05%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82---post/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_05数据请求---post/</id>
    <published>2019-06-07T22:26:05.000Z</published>
    <updated>2019-06-13T05:44:34.539Z</updated>
    
    <content type="html"><![CDATA[<h5 id="五、数据请求-—post"><a href="#五、数据请求-—post" class="headerlink" title="五、数据请求 —post"></a>五、数据请求 —post</h5><h6 id="1-POST数据接收：POST数据比GET大得多"><a href="#1-POST数据接收：POST数据比GET大得多" class="headerlink" title="1.POST数据接收：POST数据比GET大得多"></a>1.POST数据接收：POST数据比GET大得多</h6><p>POST很大——分段<br>data    一段数据<br>end    全部到达<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> querystring=<span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"></span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//POST——req</span></span><br><span class="line">  <span class="keyword">var</span> str=<span class="string">''</span>;   <span class="comment">//接收数据</span></span><br><span class="line">  <span class="comment">//data——有一段数据到达(很多次)</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">  req.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`第<span class="subst">$&#123;i++&#125;</span>次收到数据`</span>);</span><br><span class="line">    str+=data;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//end——数据全部到达(一次)</span></span><br><span class="line">  req.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> POST=querystring.parse(str);</span><br><span class="line">    <span class="built_in">console</span>.log(POST);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;).listen(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure></p><h6 id="2-Get和Post综合、文件请求"><a href="#2-Get和Post综合、文件请求" class="headerlink" title="2.Get和Post综合、文件请求"></a>2.Get和Post综合、文件请求</h6><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> querystring=<span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"><span class="keyword">const</span> urlLib=<span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server=http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//GET</span></span><br><span class="line">  <span class="keyword">var</span> obj=urlLib.parse(req.url, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> <span class="built_in">url</span>=obj.pathname;</span><br><span class="line">  <span class="keyword">const</span> GET=obj.query;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//POST</span></span><br><span class="line">  <span class="keyword">var</span> str=<span class="string">''</span>;</span><br><span class="line">  req.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>)</span>&#123;</span><br><span class="line">    str+=data;</span><br><span class="line">  &#125;);</span><br><span class="line">  req.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> POST=querystring.parse(str);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    url——要什么</span></span><br><span class="line"><span class="comment">    GET——get数据</span></span><br><span class="line"><span class="comment">    POST——post数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//文件请求</span></span><br><span class="line">    <span class="keyword">var</span> file_name=<span class="string">'./www'</span>+<span class="built_in">url</span>;</span><br><span class="line">    fs.readFile(file_name, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        res.write(<span class="string">'404'</span>);</span><br><span class="line">      &#125;<span class="title">else</span>&#123;</span><br><span class="line">        res.write(data);</span><br><span class="line">      &#125;</span><br><span class="line">      res.end();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">8081</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;五、数据请求-—post&quot;&gt;&lt;a href=&quot;#五、数据请求-—post&quot; class=&quot;headerlink&quot; title=&quot;五、数据请求 —post&quot;&gt;&lt;/a&gt;五、数据请求 —post&lt;/h5&gt;&lt;h6 id=&quot;1-POST数据接收：POST数据比GET大得多&quot;
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>04数据请求 ---Get</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_04%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82---Get/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_04数据请求---Get/</id>
    <published>2019-06-07T22:26:04.000Z</published>
    <updated>2019-06-13T05:45:07.469Z</updated>
    
    <content type="html"><![CDATA[<h5 id="四、数据请求-—Get"><a href="#四、数据请求-—Get" class="headerlink" title="四、数据请求 —Get"></a>四、数据请求 —Get</h5><p>前台-&gt;form、ajax、jsonp 等<br>后台-&gt;一样  都是 http请求<br><strong>请求方式</strong>：<br>1.GET        数据在url中<br>2.POST        数据不在url中   </p><h2 id="……"><a href="#……" class="headerlink" title="……"></a>……</h2><p>from.html<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost:8080/aaa"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">      用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pass"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h6 id="GET数据解析"><a href="#GET数据解析" class="headerlink" title="GET数据解析"></a>GET数据解析</h6><p>1.自己切<br><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> GET=&#123;&#125;;</span><br><span class="line">  <span class="keyword">if</span>(req.url.indexOf(<span class="string">'?'</span>)!=<span class="number">-1</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> arr=req.url.split(<span class="string">'?'</span>);</span><br><span class="line">    <span class="comment">//arr[0]=&gt;地址  '/aaa'</span></span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">url</span>=arr[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">//arr[1]=&gt;数据  'user=blue&amp;pass=123456'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr2=arr[<span class="number">1</span>].split(<span class="string">'&amp;'</span>);</span><br><span class="line">    <span class="comment">//arr2=&gt;['user=blue', 'pass=123456']</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr2.length;i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> arr3=arr2[i].split(<span class="string">'='</span>);</span><br><span class="line">      <span class="comment">//arr3[0]=&gt;名字   'user'</span></span><br><span class="line">      <span class="comment">//arr3[1]=&gt;数据   'blue'</span></span><br><span class="line">      GET[arr3[<span class="number">0</span>]]=arr3[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="title">else</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">url</span>=req.url;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">url</span>, GET);</span><br><span class="line">  <span class="comment">//req获取前台请求数据</span></span><br><span class="line">  res.write(<span class="string">'aaa'</span>);</span><br><span class="line">  res.end();</span><br><span class="line">&#125;).listen(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure></p><p>2.querystring<br><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> querystring=<span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"></span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> GET=&#123;&#125;;</span><br><span class="line">  <span class="keyword">if</span>(req.url.indexOf(<span class="string">'?'</span>)!=<span class="number">-1</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> arr=req.url.split(<span class="string">'?'</span>);</span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">url</span>=arr[<span class="number">0</span>];</span><br><span class="line">    </span><br><span class="line">    GET=querystring.parse(arr[<span class="number">1</span>]);</span><br><span class="line">  &#125;<span class="title">else</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">url</span>=req.url;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">url</span>, GET);</span><br><span class="line">  <span class="comment">//req获取前台请求数据</span></span><br><span class="line">  res.write(<span class="string">'aaa'</span>);</span><br><span class="line">  res.end();</span><br><span class="line">&#125;).listen(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure></p><p>3.urlLib<br><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> urlLib=<span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"></span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> obj=urlLib.parse(req.url, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> <span class="built_in">url</span>=obj.pathname;</span><br><span class="line">  <span class="keyword">var</span> GET=obj.query;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">url</span>, GET);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//req获取前台请求数据</span></span><br><span class="line">  res.write(<span class="string">'aaa'</span>);</span><br><span class="line">  res.end();</span><br><span class="line">&#125;).listen(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;四、数据请求-—Get&quot;&gt;&lt;a href=&quot;#四、数据请求-—Get&quot; class=&quot;headerlink&quot; title=&quot;四、数据请求 —Get&quot;&gt;&lt;/a&gt;四、数据请求 —Get&lt;/h5&gt;&lt;p&gt;前台-&amp;gt;form、ajax、jsonp 等&lt;br&gt;后台-&amp;gt
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>03文件操作fs---File System</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_03%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%20fs---File%20System/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_03文件操作 fs---File System/</id>
    <published>2019-06-07T22:26:03.000Z</published>
    <updated>2019-06-13T05:44:10.786Z</updated>
    
    <content type="html"><![CDATA[<h5 id="三、文件操作-fs——File-System"><a href="#三、文件操作-fs——File-System" class="headerlink" title="三、文件操作 fs——File System"></a>三、文件操作 fs——File System</h5><h6 id="readFile-文件名-function-err-data"><a href="#readFile-文件名-function-err-data" class="headerlink" title="readFile(文件名, function (err, data){})"></a>readFile(文件名, function (err, data){})</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//readFile(文件名, 回调函数)</span></span><br><span class="line">fs.readFile(<span class="string">'aaa.txt'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(err)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'读取失败'</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data.toString());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h6 id="writeFile-文件名-内容-function-err"><a href="#writeFile-文件名-内容-function-err" class="headerlink" title="writeFile(文件名, 内容, function (err){})"></a>writeFile(文件名, 内容, function (err){})</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//writeFile(文件名, 内容, 回调)</span></span><br><span class="line">fs.writeFile(<span class="string">"bbb.txt"</span>, <span class="string">"sdafasdwere"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h6 id="http-fs-简单http服务"><a href="#http-fs-简单http服务" class="headerlink" title="http+fs 简单http服务"></a>http+fs 简单http服务</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server=http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//req.url=&gt;'/index.html'</span></span><br><span class="line">  <span class="comment">//读取=&gt;'./www/index.html'</span></span><br><span class="line">  <span class="comment">//  './www'+req.url</span></span><br><span class="line">  <span class="keyword">var</span> file_name=<span class="string">'./www'</span>+req.url;</span><br><span class="line"></span><br><span class="line">  fs.readFile(file_name, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">      res.write(<span class="string">'404'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      res.write(data);</span><br><span class="line">    &#125;</span><br><span class="line">    res.end();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;三、文件操作-fs——File-System&quot;&gt;&lt;a href=&quot;#三、文件操作-fs——File-System&quot; class=&quot;headerlink&quot; title=&quot;三、文件操作 fs——File System&quot;&gt;&lt;/a&gt;三、文件操作 fs——File Syst
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>02nodeJS--简单http服务器</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_02nodeJS--%E7%AE%80%E5%8D%95http%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_02nodeJS--简单http服务器/</id>
    <published>2019-06-07T22:25:02.000Z</published>
    <updated>2019-06-13T05:45:14.813Z</updated>
    
    <content type="html"><![CDATA[<h5 id="二、nodeJS——-简单http服务器"><a href="#二、nodeJS——-简单http服务器" class="headerlink" title="二、nodeJS—— 简单http服务器"></a>二、nodeJS—— 简单http服务器</h5><p>server.js<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http=require(<span class="string">'http'</span>); <span class="comment">//加载http 模块</span></span><br><span class="line"><span class="comment">//request请求输入-请求的信息</span></span><br><span class="line"><span class="comment">//response响应输出-输出的东西  </span></span><br><span class="line">var server=http.createServer(function (req, res)&#123;</span><br><span class="line">  <span class="built_in">switch</span>(req.url)&#123;</span><br><span class="line">    <span class="built_in">case</span> <span class="string">'/1.html'</span>:</span><br><span class="line">      res.<span class="built_in">write</span>(<span class="string">"111111"</span>);</span><br><span class="line">      <span class="built_in">break</span>;</span><br><span class="line">    <span class="built_in">case</span> <span class="string">'/2.html'</span>:</span><br><span class="line">      res.<span class="built_in">write</span>(<span class="string">"2222"</span>);</span><br><span class="line">      <span class="built_in">break</span>;</span><br><span class="line">    <span class="built_in">default</span>:</span><br><span class="line">      res.<span class="built_in">write</span>(<span class="string">'404'</span>);</span><br><span class="line">      <span class="built_in">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="built_in">end</span>();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//监听</span></span><br><span class="line">server.<span class="built_in">listen</span>(<span class="number">8080</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//http://localhost:8080/</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;二、nodeJS——-简单http服务器&quot;&gt;&lt;a href=&quot;#二、nodeJS——-简单http服务器&quot; class=&quot;headerlink&quot; title=&quot;二、nodeJS—— 简单http服务器&quot;&gt;&lt;/a&gt;二、nodeJS—— 简单http服务器&lt;/h5&gt;&lt;
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>01nodejs安装和HelloWorld</title>
    <link href="http://yoursite.com/2019/06/08/nodejs_01nodejs%E5%AE%89%E8%A3%85%E5%92%8CHelloWorld/"/>
    <id>http://yoursite.com/2019/06/08/nodejs_01nodejs安装和HelloWorld/</id>
    <published>2019-06-07T22:25:01.000Z</published>
    <updated>2019-06-13T05:45:18.603Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、-nodejs安装和HelloWorld"><a href="#一、-nodejs安装和HelloWorld" class="headerlink" title="一、 nodejs安装和HelloWorld"></a>一、 nodejs安装和HelloWorld</h4><h5 id="1-官网下载"><a href="#1-官网下载" class="headerlink" title="1.官网下载"></a>1.官网下载</h5><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></p><h5 id="2-下一步下一步安装"><a href="#2-下一步下一步安装" class="headerlink" title="2.下一步下一步安装"></a>2.下一步下一步安装</h5><p>安装完成后 ，命令行 node -v  可以看是否安装完成</p><h5 id="3-运行一个Hello-World"><a href="#3-运行一个Hello-World" class="headerlink" title="3.运行一个Hello World"></a>3.运行一个Hello World</h5><p>新建个 1.js 文件<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.<span class="built_in">log</span>('Hello World!!!');</span><br></pre></td></tr></table></figure></p><p>运行 CMD 到命令行，<figure class="highlight plain"><figcaption><span>1.js```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2.js</span><br></pre></td></tr></table></figure></p><p>var oDate=new Date();<br>console.log(oDate.getFullYear());<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">运行 CMD 到命令行，``` <span class="keyword">node</span> <span class="title">2</span>.js</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、-nodejs安装和HelloWorld&quot;&gt;&lt;a href=&quot;#一、-nodejs安装和HelloWorld&quot; class=&quot;headerlink&quot; title=&quot;一、 nodejs安装和HelloWorld&quot;&gt;&lt;/a&gt;一、 nodejs安装和HelloWor
      
    
    </summary>
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>VS2010_编译Boost_1_64</title>
    <link href="http://yoursite.com/2018/12/05/VS2010_%E7%BC%96%E8%AF%91Boost-1-64/"/>
    <id>http://yoursite.com/2018/12/05/VS2010_编译Boost-1-64/</id>
    <published>2018-12-05T01:40:16.000Z</published>
    <updated>2019-06-17T09:17:46.273Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Boost库是一个可移植、提供源代码的C++库，作为标准库的后备，是C++标准化进程的开发引擎之一.<br><a id="more"></a></p></blockquote><h5 id="1-下载BOOST-官网www-boost-org上下载任何版本的都可以。"><a href="#1-下载BOOST-官网www-boost-org上下载任何版本的都可以。" class="headerlink" title="1. 下载BOOST 官网www.boost.org上下载任何版本的都可以。"></a>1. 下载BOOST 官网<a href="http://www.boost.org上下载任何版本的都可以。" target="_blank" rel="noopener">www.boost.org上下载任何版本的都可以。</a></h5><p>这里下载的是boost_1_64_0 版本，解压到某个目录，我解压到了D盘根目录：D:\boost_1_64_0</p><h5 id="2-生成bjam-exe可执行文件，打开2010控制台：开始-所有程序—Microsoft-visual-studio2010——Visual-Studio-Tools——Visual-Studio-2010命令提示"><a href="#2-生成bjam-exe可执行文件，打开2010控制台：开始-所有程序—Microsoft-visual-studio2010——Visual-Studio-Tools——Visual-Studio-2010命令提示" class="headerlink" title="2. 生成bjam.exe可执行文件，打开2010控制台：开始-所有程序—Microsoft visual studio2010——Visual Studio Tools——Visual Studio 2010命令提示"></a>2. 生成bjam.exe可执行文件，打开2010控制台：开始-所有程序—Microsoft visual studio2010——Visual Studio Tools——Visual Studio 2010命令提示</h5><p>进入到到目录D:\boost_1_64_0，运行bootstrap.bat </p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:<span class="string">\Program</span> Files (x86)<span class="string">\Microsoft</span> Visual Studio <span class="number">10.0</span><span class="string">\VC&gt;cd</span> D:<span class="string">\boost_1_64_0</span></span><br><span class="line">D:<span class="string">\boost_1_64_0&gt;bootstrap.bat</span></span><br></pre></td></tr></table></figure><p>这时在目录D:\boost_1_64_0生成了b2.exe、bjam.exe、project-config.jam文件</p><h5 id="3-用bjam-exe编译"><a href="#3-用bjam-exe编译" class="headerlink" title="3. 用bjam.exe编译"></a>3. 用bjam.exe编译</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">D:\boost_1_64_0&gt;bjam <span class="attribute">--toolset</span>=msvc-10.0 <span class="attribute">--build-type</span>=complete --without-python</span><br><span class="line"><span class="attribute">--prefix</span>=<span class="string">"D:\boost_1_64_0\bin\vc10"</span> <span class="attribute">link</span>=static <span class="attribute">runtime-link</span>=shared <span class="attribute">threading</span>=mu</span><br><span class="line">lti <span class="builtin-name">debug</span> release install</span><br><span class="line"></span><br><span class="line">bjam stage --without-python <span class="attribute">--toolset</span>=msvc-14.0 <span class="attribute">--build-type</span>=complete <span class="attribute">--stagedir</span>=<span class="string">"D:\boost_1_64_0\bin\vc10"</span>  <span class="attribute">link</span>=static <span class="attribute">runtime-link</span>=shared <span class="attribute">threading</span>=multi <span class="builtin-name">debug</span> release</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">D:\boost_1_64_0&gt;bjam stage <span class="attribute">--toolset</span>=msvc-14.0 <span class="attribute">--build-type</span>=complete --stagedir=</span><br><span class="line"><span class="string">"D:\boost_1_64_0\bin\vc14"</span>  <span class="attribute">link</span>=static <span class="attribute">runtime-link</span>=static <span class="attribute">threading</span>=multi debu</span><br><span class="line">g release</span><br><span class="line"></span><br><span class="line">bjam <span class="attribute">--toolset</span>=msvc-14.1 <span class="attribute">--build-type</span>=complete --without-python <span class="attribute">--prefix</span>=<span class="string">"D:\boost_1_64_0\bin\vc141"</span> <span class="attribute">link</span>=static <span class="attribute">runtime-link</span>=shared <span class="attribute">threading</span>=multi <span class="builtin-name">debug</span> release install</span><br></pre></td></tr></table></figure><p>install 表示会生成包含头文件的include目录,stage表示只生成库（dll和lib）<br>without/with表示不编译/编译哪些库<br>toolset指定编译器，VS2010用msvc-10.0<br>prefix,表示编译生成文件的路径。使用install用prefix,使用stage时用stagedir<br>link指定生成动态链接库或静态链接库。生成动态链接库需使用shared方式，生成静态链接库需使用static方式。<br>runtime-link，动态/静态链接C/C++运行时库。有shared和static两种方式，这样runtime-link和link一共可以产生4种组合方式。<br>threading，单/多线程编译。<br>debug/release，编译debug/release版本。一般都是程序的debug版本对应库的debug版本，所以两个都编译。   </p><p>差不多需要一小时，编译完成（中间会有警告）<br>编译好后，在根目录会有个bin.v2文件夹，是编译过程中的临时文件夹，很大，可以手动删除。   </p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Boost库是一个可移植、提供源代码的C++库，作为标准库的后备，是C++标准化进程的开发引擎之一.&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="make" scheme="http://yoursite.com/categories/make/"/>
    
    
      <category term="VisualStudio" scheme="http://yoursite.com/tags/VisualStudio/"/>
    
  </entry>
  
  <entry>
    <title>安装VS2017的正确姿势</title>
    <link href="http://yoursite.com/2018/12/05/%E5%AE%89%E8%A3%85VS2017%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF/"/>
    <id>http://yoursite.com/2018/12/05/安装VS2017的正确姿势/</id>
    <published>2018-12-04T22:27:41.000Z</published>
    <updated>2019-05-14T08:05:18.599Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>VS2017 默认安装在C盘,太占空间了,下载离线安装包到其它盘<br><a id="more"></a></p></blockquote><h3 id="第一步：创建-offline-文件存放的位置"><a href="#第一步：创建-offline-文件存放的位置" class="headerlink" title="第一步：创建 offline 文件存放的位置"></a>第一步：创建 offline 文件存放的位置</h3><p>找一个空闲空间比较大的盘，大概需要 30G 左右的空间（完全下载，包括了几个模拟器）.</p><h3 id="第二步：创建下载脚本"><a href="#第二步：创建下载脚本" class="headerlink" title="第二步：创建下载脚本"></a>第二步：创建下载脚本</h3><p>下载 VS2017 的在线安装程序。放到刚才创建好的文件夹里。然后创建一个 cmd 文件：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vs_community<span class="selector-class">.exe</span> --layout D:\vs2017\offline</span><br></pre></td></tr></table></figure></p><p>这个简单的脚本会下载所有的安装包。如果你不想下载所有的，可以自己选择要下载的：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vs_community<span class="selector-class">.exe</span> --layout D:\vs2017\offline --add Microsoft<span class="selector-class">.VisualStudio</span><span class="selector-class">.Workload</span><span class="selector-class">.Azure</span> Microsoft<span class="selector-class">.VisualStudio</span><span class="selector-class">.Workload</span><span class="selector-class">.ManagedDesktop</span> Component<span class="selector-class">.GitHub</span><span class="selector-class">.VisualStudio</span></span><br></pre></td></tr></table></figure><p>如果需要下载单一语言的后面加上<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--lang zh-CN</span></span><br></pre></td></tr></table></figure></p><h3 id="第三步：运行脚本，然后等待"><a href="#第三步：运行脚本，然后等待" class="headerlink" title="第三步：运行脚本，然后等待"></a>第三步：运行脚本，然后等待</h3><h3 id="第四步：安装证书"><a href="#第四步：安装证书" class="headerlink" title="第四步：安装证书"></a>第四步：安装证书</h3><p>下载完成之后，别急着安装。我想这个离线包可能是用了什么本地的 Web Server，而又需要 https，所以你得先把几个证书装上，位置在 vs2017\offline\certificates。不要偷懒，要都装。双击就可以安装。如果双击不行，就右键选择安装。</p><h3 id="第五步：安装"><a href="#第五步：安装" class="headerlink" title="第五步：安装"></a>第五步：安装</h3><p>下面才开始正式的安装。要注意的是，不要运行你下载的那个 installer，要运行 vs2017\offline\vs_community.exe 这个 installer。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;VS2017 默认安装在C盘,太占空间了,下载离线安装包到其它盘&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="install" scheme="http://yoursite.com/categories/install/"/>
    
    
      <category term="VisualStudio" scheme="http://yoursite.com/tags/VisualStudio/"/>
    
      <category term="install" scheme="http://yoursite.com/tags/install/"/>
    
  </entry>
  
  <entry>
    <title>error C2275“XXXX” 将此类型用作表达式非法</title>
    <link href="http://yoursite.com/2018/12/03/error_C2275%E5%B0%86%E6%AD%A4%E7%B1%BB%E5%9E%8B%E7%94%A8%E4%BD%9C%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%9D%9E%E6%B3%95/"/>
    <id>http://yoursite.com/2018/12/03/error_C2275将此类型用作表达式非法/</id>
    <published>2018-12-03T07:24:30.000Z</published>
    <updated>2019-06-18T07:14:28.673Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>将C代码在VC++中编译，经常会出现error C2275错误.<br><a id="more"></a><br>原因:变量的定义位置不对，应该在函数块的最前面。这是一个编程习惯的问题。   </p></blockquote><p>在移植c++代码到c的时候，经常会出现一个奇怪的错误：“error C2275: “xxxxx”: 将此类型用作表达式非法”</p><p>c的编译器要求将变量的声明放在一个函数块的头部，而c++没有这样的要求造成的；解决的办法就是把变量的声明全部放在变量的生存块的开始。</p><blockquote><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>将变量的声明放在一个函数块的头部.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;将C代码在VC++中编译，经常会出现error C2275错误.&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="error" scheme="http://yoursite.com/categories/error/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="MFC" scheme="http://yoursite.com/tags/MFC/"/>
    
      <category term="C" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>解决Navicat连接MySQL总是报错1251的方法</title>
    <link href="http://yoursite.com/2018/12/03/error_%E8%A7%A3%E5%86%B3Navicat%E8%BF%9E%E6%8E%A5MySQL%E6%80%BB%E6%98%AF%E6%8A%A5%E9%94%991251%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/12/03/error_解决Navicat连接MySQL总是报错1251的方法/</id>
    <published>2018-12-03T07:20:02.000Z</published>
    <updated>2019-06-18T03:43:27.550Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Navicat连接不上，总是报错1251;<br>原因是MySQL8.0版本的加密方式和MySQL5.0的不一样，连接会报错.<br><a id="more"></a><br>1.先通过命令行进入mysql的root账户：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql</span> -uroot -pz123456</span><br></pre></td></tr></table></figure></p></blockquote><p>2.更改加密方式：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'z123456'</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</span><br></pre></td></tr></table></figure></p><p>3.更改密码：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">'z123456'</span>;</span><br></pre></td></tr></table></figure></p><p>4.刷新：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Navicat连接不上，总是报错1251;&lt;br&gt;原因是MySQL8.0版本的加密方式和MySQL5.0的不一样，连接会报错.&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="error" scheme="http://yoursite.com/categories/error/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="Navicat" scheme="http://yoursite.com/tags/Navicat/"/>
    
  </entry>
  
  <entry>
    <title>Win命令行下关闭某端口被占用程序</title>
    <link href="http://yoursite.com/2018/12/03/Win%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%8B%E5%85%B3%E9%97%AD%E6%9F%90%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2018/12/03/Win命令行下关闭某端口被占用程序/</id>
    <published>2018-12-03T07:15:37.000Z</published>
    <updated>2019-05-14T08:05:18.594Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Netstat是控制台命令,是一个监控TCP/IP网络的非常有用的工具。<br><a id="more"></a></p></blockquote><h6 id="1-根据端口查询程序PID"><a href="#1-根据端口查询程序PID" class="headerlink" title="1.根据端口查询程序PID"></a>1.根据端口查询程序PID</h6><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano <span class="string">| findstr "</span><span class="number">7001</span><span class="string">"</span></span><br></pre></td></tr></table></figure><p>命令行下 输入 netstat /? 可查看帮忙.<br>参数 | 功能<br>—|—–<br> -a | 显示所有连接和侦听端口<br> -n | 以数字形式显示地址和端口号。</p><h2 id="o-显示拥有的与每个连接关联的进程-ID。"><a href="#o-显示拥有的与每个连接关联的进程-ID。" class="headerlink" title=" -o | 显示拥有的与每个连接关联的进程 ID。"></a> -o | 显示拥有的与每个连接关联的进程 ID。</h2><blockquote><p>tasklist用来显示运行在本地或远程计算机上的所有进程</p></blockquote><h6 id="2-根据PID查看是哪个进程或者程序占用了-如pid-5288"><a href="#2-根据PID查看是哪个进程或者程序占用了-如pid-5288" class="headerlink" title="2.根据PID查看是哪个进程或者程序占用了,如pid =5288"></a>2.根据PID查看是哪个进程或者程序占用了,如pid =5288</h6><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist <span class="string">| findstr "</span><span class="number">5288</span><span class="string">"</span></span><br></pre></td></tr></table></figure><hr><blockquote><p>taskkill是用来终止进程的.</p></blockquote><h6 id="3-杀死进程-根据上一指令查询出来的，如-node-exe"><a href="#3-杀死进程-根据上一指令查询出来的，如-node-exe" class="headerlink" title="3.杀死进程,根据上一指令查询出来的，如 node.exe"></a>3.杀死进程,根据上一指令查询出来的，如 node.exe</h6><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskkill /f /t /im <span class="keyword">node</span>.<span class="title">exe</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Netstat是控制台命令,是一个监控TCP/IP网络的非常有用的工具。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="cmd" scheme="http://yoursite.com/categories/cmd/"/>
    
    
      <category term="cmd" scheme="http://yoursite.com/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>VS2010_问题_LINK fatal error LNK1123 转换到 COFF 期间失败 文件无效或损坏</title>
    <link href="http://yoursite.com/2018/12/03/VS2010_%E9%97%AE%E9%A2%98_LINK%E6%96%87%E4%BB%B6%E6%97%A0%E6%95%88%E6%88%96%E6%8D%9F%E5%9D%8F/"/>
    <id>http://yoursite.com/2018/12/03/VS2010_问题_LINK文件无效或损坏/</id>
    <published>2018-12-02T22:26:39.000Z</published>
    <updated>2019-06-17T09:17:55.108Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>LINK : fatal error LNK1123: 转换到 COFF 期间失败: 文件无效或损坏<br><a id="more"></a><br>问题说明：当安装VS2012之后，原来的.NET 4.0会被替换为.NET 4.5。卸载VS2012时，不会恢复.NET 4.0。<br>l 当VS2012安装后，VS2010的cvtres.exe就无法使用了。如果你的PATH环境变量中VS2010的工具路径第一个出现，而且链接器需要将.res文件转换为COFF 对象格式，就会导致LNK1123错误。<br>l 当VS生成PE文件头时，使用的cvtres.exe版本错误，不能与当前的.NET平台兼容。</p></blockquote><h4 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h4><h2 id="因为是cvtres-exe版本错误导致的结果，所以凡是能使VS链接器找到正确的cvtres-exe版本的方法都可以解决该问题。或者使VS链接器不生成COFF的方法都可以。"><a href="#因为是cvtres-exe版本错误导致的结果，所以凡是能使VS链接器找到正确的cvtres-exe版本的方法都可以解决该问题。或者使VS链接器不生成COFF的方法都可以。" class="headerlink" title="因为是cvtres.exe版本错误导致的结果，所以凡是能使VS链接器找到正确的cvtres.exe版本的方法都可以解决该问题。或者使VS链接器不生成COFF的方法都可以。"></a>因为是cvtres.exe版本错误导致的结果，所以凡是能使VS链接器找到正确的cvtres.exe版本的方法都可以解决该问题。或者使VS链接器不生成COFF的方法都可以。</h2><h5 id="【方法一】"><a href="#【方法一】" class="headerlink" title="【方法一】"></a>【方法一】</h5><p>  当前系统中存在两个cvtres.exe文件，版本不同。让VS2010使用.NET 4.5的cvtres.exe程序。<br>具体步骤：<br>重命名或删除：（vs2010安装的位置）C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\cvtres.exe<br>这样C:\Windows\Microsoft.NET\Framework\v4.0.30319 (.NET 4.5)中的cvtres.exe文件就可以被VS2010使用。</p><h5 id="【方法二】"><a href="#【方法二】" class="headerlink" title="【方法二】"></a>【方法二】</h5><p>解决方法如下：<br>项目\属性\配置属性\清单工具\输入和输出\嵌入清单：原来是“是”，改成“否”。<br>说明：这种方法每个工程均需要修改配置。</p><h5 id="【方法三】"><a href="#【方法三】" class="headerlink" title="【方法三】"></a>【方法三】</h5><p>安装：VS2010 SP1. 该版本应该是能使用.NET 4.5的，并配有正确的cvtres.exe版本。<br>注意：安装VS 2010 SP1 时会移除64-bit 编译器. 通过安装 VS 2010 SP1 compiler pack 能够重新获得。</p><h5 id="【方法四】"><a href="#【方法四】" class="headerlink" title="【方法四】"></a>【方法四】</h5><p>卸载.NET 4.5，重装.NET 4.0</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;LINK : fatal error LNK1123: 转换到 COFF 期间失败: 文件无效或损坏&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="error" scheme="http://yoursite.com/categories/error/"/>
    
    
      <category term="VisualStudio" scheme="http://yoursite.com/tags/VisualStudio/"/>
    
  </entry>
  
</feed>
